name: PR Tests

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.filter.outputs.changes }}
      shared-changed: ${{ steps.filter.outputs.shared }}
      db-changed: ${{ steps.filter.outputs.db }}
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            shared:
              - 'sailorskills-shared/**'
              - '**/shared/**'
            db:
              - '**/supabase/migrations/**'
            portal:
              - 'sailorskills-portal/**'
            billing:
              - 'sailorskills-billing/**'
            operations:
              - 'sailorskills-operations/**'
            dashboard:
              - 'sailorskills-dashboard/**'
            inventory:
              - 'sailorskills-inventory/**'

  wait-for-vercel:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.services != '[]'
    outputs:
      preview-url: ${{ steps.wait.outputs.url }}
    steps:
      - name: Wait for Vercel Deployment
        id: wait
        uses: patrickedqvist/wait-for-vercel-preview@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 300
          check_interval: 10

  test-service:
    runs-on: ubuntu-latest
    needs: [detect-changes, wait-for-vercel]
    if: needs.detect-changes.outputs.services != '[]'
    strategy:
      fail-fast: false
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: ${{ matrix.service }}/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./${{ matrix.service }}

      - name: Install Playwright
        run: npx playwright install --with-deps chromium
        working-directory: ./${{ matrix.service }}

      - name: Run Playwright tests
        run: npx playwright test
        working-directory: ./${{ matrix.service }}
        env:
          PLAYWRIGHT_BASE_URL: ${{ needs.wait-for-vercel.outputs.preview-url }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-results-${{ matrix.service }}
          path: ${{ matrix.service }}/playwright-report/
          retention-days: 7

  visual-regression:
    runs-on: ubuntu-latest
    needs: [detect-changes, wait-for-vercel]
    if: needs.detect-changes.outputs.services != '[]'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Run visual tests
        run: npx playwright test --grep @visual
        env:
          PLAYWRIGHT_BASE_URL: ${{ needs.wait-for-vercel.outputs.preview-url }}

      - name: Upload screenshot diffs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshot-diffs
          path: tests/__screenshots__/__diff_output__/
          retention-days: 7

  test-integration:
    runs-on: ubuntu-latest
    needs: [detect-changes, wait-for-vercel]
    if: needs.detect-changes.outputs.shared-changed == 'true' || needs.detect-changes.outputs.db-changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Run cross-service integration tests
        run: npx playwright test tests/integration/
        env:
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          PLAYWRIGHT_BASE_URL: ${{ needs.wait-for-vercel.outputs.preview-url }}

  test-database:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.db-changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Apply migration dry-run
        run: |
          for migration in supabase/migrations/*.sql; do
            echo "Testing migration: $migration"
            psql $DATABASE_URL -f "$migration" --single-transaction
          done
        env:
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}

      - name: Validate schema
        run: node scripts/validate-schema.mjs
        env:
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}

      - name: Test RLS policies
        run: node scripts/test-rls-policies.mjs
        env:
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
